trigger:
  paths:
    include:
    - examples/*
    - src/*
    - tests/*
    - toolchain/*
  branches:
    include:
    - master
    - testing
jobs:
- job: Linux
  pool:
    vmImage: ubuntu-18.04
  strategy:
    matrix:
      android.armv7a.kitkat:
        variant: android.armv7a.kitkat
      android.armv8a.oreo:
        variant: android.armv8a.oreo
      android.armv8a.q:
        variant: android.armv8a.q
      android.x86.kitkat:
        variant: android.x86.kitkat
      android.x86_64.nougat:
        variant: android.x86_64.nougat
      emscripten.wasm:
        variant: emscripten.wasm
      fedora.amd64:
        variant: fedora.amd64
      mingw.w64:
        variant: mingw.w64
      raspberry.armhf:
        variant: raspberry.armhf
      steam.amd64:
        variant: steam.amd64
      ubuntu.amd64:
        variant: ubuntu.amd64
  steps:
  - checkout: self
    submodules: true
  - script: ./toolchain/ci/travis-deps.sh
    displayName: Downloading dependencies
    env:
      TRAVIS_OS_NAME: linux
      PIPELINES: '1'
  - script: ./toolchain/ci/travis-build.sh
    displayName: Building project
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: linux
  - script: ./toolchain/ci/travis-deploy.sh
    displayName: Deploying artifacts
    continueOnError: true
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: linux
- job: macOS_and_iOS
  pool:
    vmImage: macos-10.14
  strategy:
    matrix:
      ios:
        variant: ios
      ios.x86_64:
        variant: ios.x86_64
      osx:
        variant: osx
  steps:
  - checkout: self
    submodules: true
  - script: ./toolchain/ci/travis-deps.sh
    displayName: Downloading dependencies
    env:
      TRAVIS_OS_NAME: osx
      PIPELINES: '1'
  - script: ./toolchain/ci/travis-build.sh
    displayName: Building project
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: osx
  - script: ./toolchain/ci/travis-deploy.sh
    displayName: Deploying artifacts
    continueOnError: true
    env:
      CONFIGURATION: Release
      BUILDVARIANT: $(variant)
      PIPELINES: '1'
      MAKEFILE_DIR: toolchain/makers
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      TRAVIS_OS_NAME: osx
- job: Windows
  pool:
    vmImage: windows-2019
  strategy:
    matrix:
      uwp.amd64.vs19:
        variant: uwp.amd64.vs19
      win32.amd64.vs17:
        variant: win32.amd64.vs17
      win32.amd64.vs19:
        variant: win32.amd64.vs19
      win32.x86.vs17:
        variant: win32.x86.vs17
      win32.x86.vs19:
        variant: win32.x86.vs19
  steps:
  - checkout: self
    submodules: true
  - powershell: ./toolchain/ci/appveyor-deps.ps1
    displayName: Downloading dependencies
    env:
      AZURE_IMAGE: vs2019-win2019
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
  - powershell: ./toolchain/ci/appveyor-build.ps1
    displayName: Configuring project
    env:
      AZURE_IMAGE: vs2019-win2019
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
  - powershell: '& cmake.exe --build $env:BUILD_DIR --target install --config $env:CONFIGURATION'
    displayName: Building project
    env:
      AZURE_IMAGE: vs2019-win2019
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
  - powershell: ./toolchain/ci/appveyor-deploy.ps1
    displayName: Deploying artifacts
    continueOnError: true
    env:
      AZURE_IMAGE: vs2019-win2019
      OPENSSL_ROOT_DIR: $(Build.SourcesDirectory)/openssl-libs/
      PIPELINES: '1'
      BUILD_REPO_URI: $(Build.Repository.Uri)
      BUILD_REPO_BRANCH: $(Build.SourceBranch)
      BUILD_REPO_EVENT: $(Build.Reason)
      BUILD_REPO_ID: $(variant)
      BUILD_REPO_URL: ''
      GITHUB_TOKEN: $(Github.Token)
      CMAKE_BIN: cmake.exe
      MAKEFILE_DIR: toolchain/makers
      SAME_BUILD_DIR: '1'
      NOBUILD: '1'
      SOURCE_DIR: $(Build.SourcesDirectory)
      BUILD_DIR: $(Build.SourcesDirectory)/build
      BUILDVARIANT: $(variant)
      CONFIGURATION: Debug
